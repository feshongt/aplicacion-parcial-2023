import type { TSESTree } from '@typescript-eslint/types';
import type { Scope } from '../scope';
import type { Variable } from '../variable';
declare enum ReferenceFlag {
    Read = 1,
    Write = 2,
    ReadWrite = 3
}
interface ReferenceImplicitGlobal {
    node: TSESTree.Node;
    pattern: TSESTree.BindingName;
    ref?: Reference;
}
declare enum ReferenceTypeFlag {
    Value = 1,
    Type = 2
}
/**
 * A Reference represents a single occurrence of an identifier in code.
 */
declare class Reference {
    #private;
    /**
     * A unique ID for this instance - primarily used to help deb